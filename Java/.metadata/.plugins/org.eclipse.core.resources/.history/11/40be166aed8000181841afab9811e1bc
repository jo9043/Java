package Section3;

import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

/* 
 * Code22 개선
 * 
 * 소수점, 쉼표 등의 특수기호가 단어에 포함되지 않음
 * 숫자 등이 단어로 취급되지 않음
 * 대문자와 소문자가 같은 단어로 취급
 * 단어들이 알파벳 순으로 정렬
 */

/* 
 * String 클래스 기본 메서드
 * 
 * 문자열 동일성 검사:		boolean equals(String)
 * 문자열 사전식 순서:		int compareTo(String)
 * 문자열 길이:			int length()
 * 특정 위치의 문자:		char charAt(int)
 * 지정한 문자의 위치 검색:	int indexOf(char)
 * 지정된 범위의 부분 문자열:	String substring(int, int)
 */ 


public class Code23 { // 인덱스 메이커

	static String [] words = new String[100000];
	static int [] count = new int [100000];
	static int n = 0;

	static public void main(String[] args){
		Scanner kb = new Scanner(System.in);

		while(true){
			System.out.print("$ ");
			String command = kb.next();
			if(command.equals("read")){
				String fileName = kb.next();
				makeIndex(fileName);
			}
			else if(command.equals("find")){
				String str = kb.next();
				int index = findWord(str);
				if(index != -1){
					System.out.println("The word " + words[index] + " appears " + count[index] + " times.");
				}
				else
					System.out.println("The word " + str + " does not appear.");
			}
			else if(command.equals("saveas")){
				String fileName = kb.next();
				saveAs(fileName);

			}
			else if(command.equals("exit"))
				break;

			else
				System.out.print("Wrong command");
		}

		kb.close();

	}

	static void makeIndex(String fileName){
		try {
			Scanner inFile = new Scanner(new File(fileName));
			while(inFile.hasNext()){
				String str = inFile.next();
				addWord(trimming(str));
			}
		} 

		catch (FileNotFoundException e) {
			System.out.println("No File");
			return;
		}
	}
	
	// 단어의 앞 뒤에 붙은 특수문자 제거
	static String trimming(String str){
				
		// while i-th character is not letter
		int i=0;
		while(i < str.length() && !Character.isLetter(str.charAt(i))){ //str.charAt(i) >= 'a' && str.charAt(i) <= 'z'  
			
		}
		
		int j = str.length()-1;
		
		
		return null;
	}

	static void addWord(String str){ // 문자열 목록에 있는지
		int index = findWord(str); // return -1 if not found
		if(index != -1){
			count[index]++;
		}
		else{
			words[n] = str;
			count[n] = 1;
			n++;
		}
	}

	static int findWord(String str){
		for(int i=0; i<n; i++)
			if(words[i].equalsIgnoreCase(str)) // 일치하면 배열 index 리턴
				return i;
		return -1; // 찾는 단어가 없는 경우
	}

	static void saveAs(String fileName){
		PrintWriter outFile;
		try {
			outFile = new PrintWriter(new FileWriter(fileName));
			for(int i=0; i<n; i++){
				outFile.println(words[i] + " " + count[i]);
			}

			outFile.close();
		} 
		catch (IOException e) {
			System.out.println("Save failed!");
			return;
		}
	}
	
	
}


















